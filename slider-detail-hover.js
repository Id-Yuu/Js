class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.renderSkeleton()}set data(n){const e=n.title?.$t||"Untitled",t=n.link.find((n=>"alternate"===n.rel))?.href||"#",i=n.media$thumbnail?.url?n.media$thumbnail.url.replace(/s72-c/,"s1600")+"-rw":(n.content?.$t.match(/https?:\/\/[^'" >]+\.(jpe?g|webp|gif|png)/i)||[])[0]||"",a=new Date(n.updated?.$t).toLocaleDateString(),o=n.summary?.$t||"No summary available.",r=n.category?.map((n=>n.term)),s=["Action","Adult Cast","Adventure","Anthropomorphic","Autobiografi","Avant Garde","CGDCT","Childcare","Comedy","Crossdressing","Delinquents","Demons","Detective","Dokumenter","Drama","Ecchi","Emotional Damage","Erotica","Fantasy","Furry","Gag Humor","Game","Girls Love","Gore","Gourmet","Harem","Hentai","Historical","Horror","Idols (Female)","Isekai","Josei","Love Polygon","Hentai","Magic","Magical Sex Shift","Mahou Shoujo","Martial Arts","Mecha","Medical","Military","Music","Mystery","Mythology","Organized Crime","Otaku Culture","Parody","Performing Arts","Post-Apocalyptic","Psychological","Racing","Reincarnation","Religi","Reverse Harem","Romance","Romantic Subtext","Samurai","School","Sci-Fi","Seinen","Shoujo","Shounen","Showbiz","Slice of Life","Space","Sports","Strategy Game","Super Power","Supernatural","Survival","Suspense","Team Sports","Thriller","Time Travel","Urban Fantasy","Vampire","Video Game","Villainess","Workplace"],l=["Ongoing","Completed"],d=["TV","Movie","OVA","ONA","Special"],c=r.filter((n=>s.includes(n))),m=r.filter((n=>l.includes(n))),h=r.filter((n=>d.includes(n)));setTimeout((()=>{this.shadowRoot.innerHTML=`\n          <style>\n            .card {\n              overflow: hidden;\n              font-family: sans-serif;\n              position: relative;\n              margin: 5px;\n              cursor: pointer;\n            }\n            img {\n              width: 100%;\n              height: 100%;\n              aspect-ratio: 2 / 3; /* Portrait ratio */\n              object-fit: cover;\n              display: block;\n            }\n            .card a{\n              text-decoration: none;\n            }\n            .card h4 {\n              font-size: 14px;\n              margin: 10px 0 5px;\n              overflow: hidden;\n              text-overflow: ellipsis;\n              display: -webkit-box;\n              -webkit-line-clamp: 2; /* Specify the number of lines */\n              -webkit-box-orient: vertical;\n            }\n          </style>\n          <div class="card">\n  \t        <a href="${t}" target="_self">\n      \t      <img src="${i}" alt="${e}" loading="lazy">\n                <h4>${e}</h4>\n  \t\t\t    </a>\n          </div>\n        `;const n=this.shadowRoot.querySelector(".card"),r=document.createElement("div");r.className="subcard",r.innerHTML=`\n          <div class="content-subcard">\n            <div class="left">\n              <img src="${i}" alt="${e}" loading="lazy" style="min-width:150px;">\n            </div>\n            <div class="right">\n              <h3>${e}</h3>\n              <table class="meta-table">\n              <tr>\n                <th>Updated</th>\n                <td>${a}</td>\n              </tr>\n              <tr>\n                <th>Type</th>\n                <td>${h.join(", ")}</td>\n              </tr>\n              <tr>\n                <th>Genres</th>\n                <td>${c.join(", ")}</td>\n              </tr>\n              <tr>\n                <th>Status</th>\n                <td>${m.join(", ")}</td>\n              </tr>\n              <tr>\n                <th>Summary</th>\n                <td>${o}</td>\n              </tr>\n            </table>\n            </div>\n          </div>\n        `,document.body.appendChild(r);(window.matchMedia("(max-width: 600px)").matches||window.innerWidth<600)&&(r.style.display="none",r.remove()),"ontouchstart"in document.documentElement&&r.remove();const s=document.createElement("style");s.textContent="\n          .subcard {\n            position: fixed;\n            pointer-events: none;\n            background: rgba(0,0,0,0.85);\n            padding: 10px;\n            box-shadow: 0 2px 6px rgba(0,0,0,0.2);\n            border-radius: 6px;\n            max-width: 350px;\n            opacity: 0;\n            transform: translate(-50%, -50%) scale(0.95);\n            transition: opacity 0.2s ease, transform 0.2s ease;\n            z-index: 99999;\n          }\n          .subcard.visible {\n            opacity: 1;\n            transform: translate(-50%, -50%) scale(1);\n          }\n          .content-subcard {\n            display: flex;\n            align-items: flex-start;\n            gap:10px;\n            color: #ddd;\n          }\n          .content-subcard .left{width:150px;}\n          .content-subcard .right{overflow: hidden;}\n          .content-subcard .left img {\n            width: 150px;\n            aspect-ratio: 2 / 3; /* Portrait ratio */\n            object-fit: cover;\n            border-radius: 4px;\n            display: block;\n          }\n          .content-subcard h3 {\n\t\t\t      font-size:14px;\n            font-family: sans-serif;\n            font-weight: bold;\n            color: #fff;\n            margin: 2px 0;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            display: -webkit-box;\n            -webkit-line-clamp: 2; /* Specify the number of lines */\n            -webkit-box-orient: vertical;\n          }\n          .meta-table {\n            width: 100%;\n            border-collapse: collapse;\n            font-family: sans-serif;\n            margin-top: 10px;\n            font-size:11px;\n            border-spacing: 0;\n          }\n          .meta-table th {\n            text-align: left;\n            padding: 6px;\n            font-weight:bold;\n            width: 65px;\n            display: table-cell;\n            vertical-align: inherit;\n            font-weight: bold;\n            text-align: -internal-center;\n            unicode-bidi: isolate;\n          }\n          .meta-table tr:nth-child(odd) {\n            background-color: rgba(0,0,0,0.2);\n          }\n          .meta-table tr {\n          \tborder-bottom: 1px solid rgba(255,255,255,0.2);\n            vertical-align: baseline;\n            margin: 0;\n            padding: 0;\n          }\n          .meta-table td {\n            overflow: hidden;\n            text-overflow: ellipsis;\n            display: -webkit-box;\n            -webkit-line-clamp: 2; /* Specify the number of lines */\n            -webkit-box-orient: vertical;\n            margin-bottom: 5px;\n          }\n          // Responsive styles hide subcard on small screens\n          @media (max-width: 600px) {\n            .subcard {\n              display: none;\n            }\n          }\n        ",document.head.appendChild(s),n.addEventListener("mousemove",(n=>{const e=r.offsetWidth||350,t=r.offsetHeight||200,i=10;let a=n.clientX,o=n.clientY;a+e/2+i>window.innerWidth&&(a=window.innerWidth-e/2-i),a-e/2-i<0&&(a=e/2+i),o+t/2+i>window.innerHeight&&(o=window.innerHeight-t/2-i),o-t/2-i<0&&(o=t/2+i),r.style.left=`${a}px`,r.style.top=`${o}px`,r.style.width="350px",r.classList.add("visible"),r.style.transform="translate(-50%, -50%) scale(1)"})),n.addEventListener("mouseleave",(()=>{r.classList.remove("visible")}))}),2e3)}renderSkeleton(){this.shadowRoot.innerHTML='\n        <style>\n          .skeleton {\n            width: 100%;\n            aspect-ratio: 2 / 3;\n            border-radius: 8px;\n            background: linear-gradient(90deg, #eee 25%, #ddd 50%, #eee 75%);\n            background-size: 200% 100%;\n            animation: shimmer 1.5s infinite;\n            margin: 5px 0;\n            display: block;\n            height: auto;\n            min-height: 150px;\n            max-width: 350px;\n          }\n          @keyframes shimmer {\n            0% { background-position: -200% 0; }\n            100% { background-position: 200% 0; }\n          }\n          @media (max-width: 600px) {\n            .skeleton {\n              width: 100%;\n              min-height: 100px;\n            }\n          }\n          @media (max-width: 1000px) {\n            .skeleton {\n              min-height: 120px;\n            }\n          }\n        </style>\n        <div class="skeleton"></div>\n      '}}customElements.define("slide-card",n);
